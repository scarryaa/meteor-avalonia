<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <PublishSingleFile>true</PublishSingleFile>
        <SelfContained>true</SelfContained>
        <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
        <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
        <DebugType>embedded</DebugType>
        <RuntimeIdentifiers>win-x64;osx-x64;linux-x64</RuntimeIdentifiers>
        <PublishTrimmed>true</PublishTrimmed>
        <TrimMode>link</TrimMode>
        <JsonSerializerIsReflectionEnabledByDefault>false</JsonSerializerIsReflectionEnabledByDefault>
    </PropertyGroup>

    <ItemGroup>
        <AvaloniaResource Include="Assets\**"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia" Version="11.1.0"/>
        <PackageReference Include="Avalonia.Desktop" Version="11.1.0"/>
        <PackageReference Include="Avalonia.Themes.Fluent" Version="11.1.0"/>
        <PackageReference Include="Avalonia.Fonts.Inter" Version="11.1.0"/>
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.1.0"/>
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.1"/>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.0-preview.6.24327.7"/>
        <PackageReference Include="SkiaSharp" Version="2.88.8" />
        <PackageReference Include="SkiaSharp.NativeAssets.macOS" Version="2.88.8" />
        <PackageReference Include="SkiaSharp.NativeAssets.Linux" Version="2.88.8" />
        <PackageReference Include="SkiaSharp.NativeAssets.Win32" Version="2.88.8" />
    </ItemGroup>

    <ItemGroup>
        <UpToDateCheckInput Remove="Views\MainWindow.axaml"/>
        <UpToDateCheckInput Remove="Assets\avalonia-logo.ico"/>
        <UpToDateCheckInput Remove="Resources\Fonts.axaml"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\meteor.UI\meteor.UI.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <None Include="settings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup>
        <Content Include="$(OutputPath)../../../../meteor-rust-core/target/release/libmeteor_rust_core.*">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <Target Name="CopyRustLibrary" AfterTargets="Publish">
        <ItemGroup>
            <RustLibFiles Include="$(OutputPath)../../../../meteor-rust-core/target/release/libmeteor_rust_core.*" />
        </ItemGroup>
        <Copy SourceFiles="@(RustLibFiles)" DestinationFolder="$(PublishDir)" />
    </Target>

    <Target Name="CopyThemes" AfterTargets="Build">
        <ItemGroup>
            <ThemeFiles Include="..\meteor.UI\Common\Themes\*.json" />
        </ItemGroup>
        <Copy SourceFiles="@(ThemeFiles)" DestinationFolder="$(OutDir)Common\Themes" />
    </Target>
</Project>
